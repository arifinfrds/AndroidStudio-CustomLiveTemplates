<templateSet group="Android">
  <template name="mark" value="// MARK: - " description="Default Mark (Xcode style comment section)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="logdkotlin" value="Log.d(TAG, &quot;Context: method(): variable: value&quot;)" description="Log Debug" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="extensiontoast" value="fun Context.toast(message: CharSequence) = &#10;    Toast.makeText(this, message, Toast.LENGTH_SHORT).show()" description="Extension Toast Context" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="navigatetootheractivitykotlin" value="private fun navigateToOtherActivity() {&#10;    val intent = Intent(this, OtherActivity::class.java)&#10;    startActivity(intent)&#10;}" description="Navigate to other Activity" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="createprogressdialogkotlin" value="    private var mProgressDialog: ProgressDialog? = null&#10;&#10;    private fun showProgressDialog() {&#10;        if (mProgressDialog == null) {&#10;            mProgressDialog = ProgressDialog(this)&#10;            mProgressDialog!!.setMessage(getString(R.string.title_loading_id))&#10;            mProgressDialog!!.isIndeterminate = true&#10;        }&#10;        mProgressDialog!!.setCanceledOnTouchOutside(false)&#10;        mProgressDialog!!.show()&#10;    }&#10;&#10;    private fun hideProgressDialog() {&#10;        if (mProgressDialog != null &amp;&amp; mProgressDialog!!.isShowing) {&#10;            mProgressDialog!!.dismiss()&#10;        }&#10;    }" description="Create Progress Dialog for Kotlin" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="layerviewmodelkotlin" value="class ViewModel {&#10;&#10;}" description="Architecture layer for ViewModel" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="layerdataservice" value="class DataService {&#10;&#10;&#10;    // MARK: - Singleton&#10;&#10;    companion object {&#10;        val instance = DataService()&#10;    }&#10;    &#10;}" description="Architercture Layer for Data Service" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
  <template name="createarrowbackbuttonkotlin" value="    /*&#10;    val actionBar = supportActionBar&#10;    actionBar?.setDisplayHomeAsUpEnabled(true)&#10;    */&#10;    &#10;    override fun onOptionsItemSelected(item: MenuItem): Boolean {&#10;        when (item.itemId) {&#10;            android.R.id.home -&gt; {&#10;                finish()&#10;                return true&#10;            }&#10;        }&#10;        return true&#10;    }" description="Display back navigation Android" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="setuprecyclerviewkotlin" value="fun setupRecyclerView() {&#10;        val linearLayoutManager = LinearLayoutManager(&#10;                this,&#10;                LinearLayoutManager.VERTICAL,&#10;                false&#10;        )&#10;&#10;        recyclerView.layoutManager = linearLayoutManager&#10;        adapter = MainAdapter(itemModels)&#10;        recyclerView.adapter = adapter&#10;    }" description="Setup RecyclerView for Kotlin" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="adapterkotlin" value="&lt;!--item_list.xml--&gt;&#10;&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;android.support.constraint.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:background=&quot;@color/md_white_1000&quot;&gt;&#10;&#10;    &lt;FrameLayout&#10;        android:id=&quot;@+id/containerFrameLayout&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;72dp&quot;&#10;        android:clickable=&quot;true&quot;&#10;        android:foreground=&quot;?android:attr/selectableItemBackground&quot;&#10;        android:paddingLeft=&quot;@dimen/text_margin&quot;&#10;        android:paddingRight=&quot;@dimen/text_margin&quot;&#10;        android:paddingTop=&quot;@dimen/text_margin&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintHorizontal_bias=&quot;0.0&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;&#10;        &lt;android.support.constraint.ConstraintLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;            &lt;ImageView&#10;                android:id=&quot;@+id/thumbnailImageView&quot;&#10;                android:layout_width=&quot;40dp&quot;&#10;                android:layout_height=&quot;40dp&quot;&#10;                android:scaleType=&quot;centerCrop&quot;&#10;                android:src=&quot;@color/colorPrimary&quot;&#10;                app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;                app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/titleTextView&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:layout_marginLeft=&quot;16dp&quot;&#10;                android:layout_marginRight=&quot;8dp&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:text=&quot;Title&quot;&#10;                android:textAppearance=&quot;@style/TextAppearance.AppCompat.Subhead&quot;&#10;                app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;                app:layout_constraintStart_toEndOf=&quot;@+id/thumbnailImageView&quot;&#10;                app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/contentTextView&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Content&quot;&#10;                android:textAppearance=&quot;@style/TextAppearance.AppCompat.Small&quot;&#10;                app:layout_constraintEnd_toEndOf=&quot;@+id/titleTextView&quot;&#10;                app:layout_constraintStart_toStartOf=&quot;@+id/titleTextView&quot;&#10;                app:layout_constraintTop_toBottomOf=&quot;@+id/titleTextView&quot; /&gt;&#10;&#10;            &lt;FrameLayout&#10;                android:id=&quot;@+id/frame_layout_item_detail_category&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;8dp&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:layout_marginLeft=&quot;8dp&quot;&#10;                android:layout_marginRight=&quot;8dp&quot;&#10;                android:layout_marginStart=&quot;56dp&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;                app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;                app:layout_constraintTop_toBottomOf=&quot;@id/contentTextView&quot; /&gt;&#10;&#10;&#10;        &lt;/android.support.constraint.ConstraintLayout&gt;&#10;&#10;&#10;        &lt;View&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;1dp&quot;&#10;            android:layout_gravity=&quot;bottom&quot;&#10;            android:layout_marginLeft=&quot;56dp&quot;&#10;            android:background=&quot;@color/colorDivider&quot;&#10;            app:layout_constraintRight_toRightOf=&quot;parent&quot;&#10;            app:layout_constraintTop_toBottomOf=&quot;@id/frame_layout_item_detail_category&quot; /&gt;&#10;&#10;    &lt;/FrameLayout&gt;&#10;&#10;&#10;&lt;/android.support.constraint.ConstraintLayout&gt;&#10;&#10;interface MainAdapterListener {&#10;    fun onItemClick(position: Int)&#10;}&#10;&#10;&#10;class MainAdapter&#10;(&#10;        val items: MutableList&lt;ItemModel&gt;,&#10;        val listener: MainAdapterListener&#10;&#10;) : RecyclerView.Adapter&lt;MainAdapter.ViewHolder&gt;() {&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {&#10;        val itemView = LayoutInflater.from(parent?.context)&#10;                .inflate(R.layout.item_list, parent, false)&#10;        return ViewHolder(itemView)&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: ViewHolder, position: Int) {&#10;        val item = items[position]&#10;&#10;        holder?.titleTextView.text = item.title&#10;        holder?.contentTextView.text = item.content&#10;&#10;        holder?.containerFrameLayout.setOnClickListener {&#10;            listener.onItemClick(position)&#10;        }&#10;    }&#10;&#10;    override fun getItemCount(): Int {&#10;        return items.count()&#10;    }&#10;&#10;&#10;    class ViewHolder(itemView: View?) : RecyclerView.ViewHolder(itemView) {&#10;&#10;        // MARK: - Public Properties&#10;        val containerFrameLayout: FrameLayout&#10;        val thumbnailImageView: ImageView&#10;        val titleTextView: TextView&#10;        val contentTextView: TextView&#10;&#10;        // MARK: - Initialization&#10;        init {&#10;            containerFrameLayout = itemView?.findViewById(R.id.containerFrameLayout) as FrameLayout&#10;            thumbnailImageView = itemView?.findViewById(R.id.thumbnailImageView) as ImageView&#10;            titleTextView = itemView?.findViewById(R.id.titleTextView) as TextView&#10;            contentTextView = itemView?.findViewById(R.id.contentTextView) as TextView&#10;        }&#10;    }&#10;}" description="Adapter for Kotlin" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_TOPLEVEL" value="true" />
    </context>
  </template>
</templateSet>